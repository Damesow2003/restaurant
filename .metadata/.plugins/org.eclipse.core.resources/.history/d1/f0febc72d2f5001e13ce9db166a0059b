package com.api.restaurant.controller;

import java.net.URI;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.support.ServletUriComponentsBuilder;

import com.api.restaurant.exceptions.ImpossibleAjouterMenu;
import com.api.restaurant.exceptions.MenuNotFound;
import com.api.restaurant.modele.Diner;
import com.api.restaurant.repository.DinerService;

import jakarta.transaction.Transactional;

@RestController
public class DinerController{
	@Autowired
	private DinerService dinerService;
	@GetMapping("/diner")
	public Iterable<Diner> getDiners(){
	
	}
	@GetMapping("/diner/{id}")
	public Optional<Diner> getDiner(@PathVariable Integer id){
		Optional<Diner>  diner = dinerService.
		if(!diner.isPresent()) {
			throw new MenuNotFound("Le Diner avec l'id "+id+" est introuvable");
		}
		return diner;
	}
	@PostMapping("/diner")
	public ResponseEntity<Diner> savedMenu(@RequestBody Diner diner){
		Diner saveDiner = dinerRepository.save(diner);
		if(saveDiner == null) {
			throw new ImpossibleAjouterMenu("Impossible d'ajouyer un diner");
		}
		
		URI location = ServletUriComponentsBuilder
				.fromCurrentRequest()
				.buildAndExpand(diner.getId())
				.toUri();
		return ResponseEntity.created(location).build();
	}

	
	
	@PutMapping("/diner/{id}")
	public ResponseEntity<Diner> updatedDiner(@PathVariable int id, @RequestBody Diner diner) {
	    Optional<Diner> existingDiner = dinerRepository.findById(id);
	    if(!existingDiner.isPresent()) {
	        throw new MenuNotFound("impossible de mettre a jour le menu avec l'id " + id + " est Introuvable");
	    }

	    Diner update = existingDiner.get();
	    update.setCreatedDate(diner.getCreatedDate());
	    update.setDescription(diner.getDescription());
	    update.setImageUrl(diner.getImageUrl());
	    update.setPosition(diner.getPosition());
	    update.setScore(diner.getScore());
	    update.setTitre(diner.getTitre());
	    update.setComments(diner.getComments());

	    Diner saveDiner = dinerRepository.save(update);
	    return ResponseEntity.ok(saveDiner);
	}

	
	@DeleteMapping("/diner/{id}")
	public void deleteDiner(@PathVariable int id) {
		dinerRepository.deleteById(id);
	}
}
